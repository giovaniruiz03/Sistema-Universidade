CREATE TABLE tb_aluno (
  id_aluno INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  nome_aluno VARCHAR(50) NOT NULL,
  sobrenome VARCHAR(60) NOT NULL,
  email VARCHAR(120) NOT NULL,
  matriculado BIT NOT NULL DEFAULT 0
);

CREATE TABLE tb_curso (
  id_curso INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  nome_curso VARCHAR(80) NOT NULL,
  area_curso VARCHAR(60) NOT NULL
);

CREATE TABLE tb_aluno_curso (
  id_aluno INT NOT NULL PRIMARY KEY,
  id_curso INT NOT NULL,
  FOREIGN KEY (id_aluno) REFERENCES tb_aluno (id_aluno),
  FOREIGN KEY (id_curso) REFERENCES tb_curso (id_curso)
);

DELIMITER $$

CREATE TRIGGER aluno_email_trigger
BEFORE INSERT ON tb_aluno
FOR EACH ROW
BEGIN
  SET NEW.email = CONCAT(NEW.nome_aluno, '.', NEW.sobrenome, '@facens.br');
END $$

DELIMITER ;

DELIMITER $$

CREATE PROCEDURE matricular_aluno (
  IN id_aluno_mat INT,
  IN id_curso_mat INT
)
BEGIN
  DECLARE matriculado_anteriormente INT;

  -- Verifica se o aluno já está matriculado no curso
  SELECT COUNT(*)
  INTO matriculado_anteriormente
  FROM tb_aluno_curso
  WHERE id_aluno = id_aluno_mat
  AND id_curso = id_curso_mat;

  IF matriculado_anteriormente > 0 THEN
    SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'O aluno já está matriculado neste curso';
  ELSE
    INSERT INTO tb_aluno_curso (id_aluno, id_curso) VALUES (id_aluno, id_curso);
  END IF;
END $$

DELIMITER ;

INSERT INTO tb_aluno (nome_aluno, sobrenome, matriculado) VALUES
  ('João', 'Silva', 0),
  ('Maria', 'Souza', 0),
  ('Carlos', 'Andrade', 0);

CALL inserir_curso('Engenharia Civíl', 'Engenharia');
CALL inserir_curso('Engenharia da Computação', 'Engenharia');
CALL inserir_curso('Biomedicina', 'Biológicas');

CALL matricular_aluno(1, 1); -- João em Engenharia
CALL matricular_aluno(2, 2); -- Maria em Engenharia da Computação
CALL matricular_aluno(3, 3); -- Carlos em Biomedicina
CALL matricular_aluno(1, 2); -- Tentar matricular João em Engenharia da Computação

SELECT * FROM tb_aluno;

SELECT * FROM tb_curso;

SELECT * FROM tb_aluno_curso;
